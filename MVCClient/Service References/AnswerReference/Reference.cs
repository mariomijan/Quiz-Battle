//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCClient.AnswerReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Answer", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Answer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCClient.AnswerReference.Question QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isCorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pointAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCClient.AnswerReference.Question Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCorrect {
            get {
                return this.isCorrectField;
            }
            set {
                if ((this.isCorrectField.Equals(value) != true)) {
                    this.isCorrectField = value;
                    this.RaisePropertyChanged("isCorrect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pointAmount {
            get {
                return this.pointAmountField;
            }
            set {
                if ((this.pointAmountField.Equals(value) != true)) {
                    this.pointAmountField = value;
                    this.RaisePropertyChanged("pointAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MVCClient.AnswerReference.Answer> AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCClient.AnswerReference.Category categoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MVCClient.AnswerReference.Answer> Answers {
            get {
                return this.AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswersField, value) != true)) {
                    this.AnswersField = value;
                    this.RaisePropertyChanged("Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCClient.AnswerReference.Category category {
            get {
                return this.categoryField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryField, value) != true)) {
                    this.categoryField = value;
                    this.RaisePropertyChanged("category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Models", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MVCClient.AnswerReference.Question> questionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MVCClient.AnswerReference.Question> question {
            get {
                return this.questionField;
            }
            set {
                if ((object.ReferenceEquals(this.questionField, value) != true)) {
                    this.questionField = value;
                    this.RaisePropertyChanged("question");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerQuestionDTO", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class AnswerQuestionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVCClient.AnswerReference.Answer AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAnsweredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVCClient.AnswerReference.Answer Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAnswered {
            get {
                return this.IsAnsweredField;
            }
            set {
                if ((this.IsAnsweredField.Equals(value) != true)) {
                    this.IsAnsweredField = value;
                    this.RaisePropertyChanged("IsAnswered");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AnswerReference.IAnswerService")]
    public interface IAnswerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/AddAnswer", ReplyAction="http://tempuri.org/IAnswerService/AddAnswerResponse")]
        void AddAnswer(MVCClient.AnswerReference.Answer answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/AddAnswer", ReplyAction="http://tempuri.org/IAnswerService/AddAnswerResponse")]
        System.Threading.Tasks.Task AddAnswerAsync(MVCClient.AnswerReference.Answer answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/UpdateAnswer", ReplyAction="http://tempuri.org/IAnswerService/UpdateAnswerResponse")]
        void UpdateAnswer(MVCClient.AnswerReference.Answer answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/UpdateAnswer", ReplyAction="http://tempuri.org/IAnswerService/UpdateAnswerResponse")]
        System.Threading.Tasks.Task UpdateAnswerAsync(MVCClient.AnswerReference.Answer answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/RemoveAnswer", ReplyAction="http://tempuri.org/IAnswerService/RemoveAnswerResponse")]
        void RemoveAnswer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/RemoveAnswer", ReplyAction="http://tempuri.org/IAnswerService/RemoveAnswerResponse")]
        System.Threading.Tasks.Task RemoveAnswerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/GetAnswer", ReplyAction="http://tempuri.org/IAnswerService/GetAnswerResponse")]
        MVCClient.AnswerReference.Answer GetAnswer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/GetAnswer", ReplyAction="http://tempuri.org/IAnswerService/GetAnswerResponse")]
        System.Threading.Tasks.Task<MVCClient.AnswerReference.Answer> GetAnswerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/AnswerQuestion", ReplyAction="http://tempuri.org/IAnswerService/AnswerQuestionResponse")]
        MVCClient.AnswerReference.AnswerQuestionDTO AnswerQuestion(int id, int lobbyId, int userId, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/AnswerQuestion", ReplyAction="http://tempuri.org/IAnswerService/AnswerQuestionResponse")]
        System.Threading.Tasks.Task<MVCClient.AnswerReference.AnswerQuestionDTO> AnswerQuestionAsync(int id, int lobbyId, int userId, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/GetAllAnswer", ReplyAction="http://tempuri.org/IAnswerService/GetAllAnswerResponse")]
        System.Collections.Generic.List<MVCClient.AnswerReference.Answer> GetAllAnswer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/GetAllAnswer", ReplyAction="http://tempuri.org/IAnswerService/GetAllAnswerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MVCClient.AnswerReference.Answer>> GetAllAnswerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/IsCorrect", ReplyAction="http://tempuri.org/IAnswerService/IsCorrectResponse")]
        bool IsCorrect(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAnswerService/IsCorrect", ReplyAction="http://tempuri.org/IAnswerService/IsCorrectResponse")]
        System.Threading.Tasks.Task<bool> IsCorrectAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAnswerServiceChannel : MVCClient.AnswerReference.IAnswerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AnswerServiceClient : System.ServiceModel.ClientBase<MVCClient.AnswerReference.IAnswerService>, MVCClient.AnswerReference.IAnswerService {
        
        public AnswerServiceClient() {
        }
        
        public AnswerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AnswerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnswerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AnswerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddAnswer(MVCClient.AnswerReference.Answer answer) {
            base.Channel.AddAnswer(answer);
        }
        
        public System.Threading.Tasks.Task AddAnswerAsync(MVCClient.AnswerReference.Answer answer) {
            return base.Channel.AddAnswerAsync(answer);
        }
        
        public void UpdateAnswer(MVCClient.AnswerReference.Answer answer) {
            base.Channel.UpdateAnswer(answer);
        }
        
        public System.Threading.Tasks.Task UpdateAnswerAsync(MVCClient.AnswerReference.Answer answer) {
            return base.Channel.UpdateAnswerAsync(answer);
        }
        
        public void RemoveAnswer(int id) {
            base.Channel.RemoveAnswer(id);
        }
        
        public System.Threading.Tasks.Task RemoveAnswerAsync(int id) {
            return base.Channel.RemoveAnswerAsync(id);
        }
        
        public MVCClient.AnswerReference.Answer GetAnswer(int id) {
            return base.Channel.GetAnswer(id);
        }
        
        public System.Threading.Tasks.Task<MVCClient.AnswerReference.Answer> GetAnswerAsync(int id) {
            return base.Channel.GetAnswerAsync(id);
        }
        
        public MVCClient.AnswerReference.AnswerQuestionDTO AnswerQuestion(int id, int lobbyId, int userId, int categoryId) {
            return base.Channel.AnswerQuestion(id, lobbyId, userId, categoryId);
        }
        
        public System.Threading.Tasks.Task<MVCClient.AnswerReference.AnswerQuestionDTO> AnswerQuestionAsync(int id, int lobbyId, int userId, int categoryId) {
            return base.Channel.AnswerQuestionAsync(id, lobbyId, userId, categoryId);
        }
        
        public System.Collections.Generic.List<MVCClient.AnswerReference.Answer> GetAllAnswer() {
            return base.Channel.GetAllAnswer();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MVCClient.AnswerReference.Answer>> GetAllAnswerAsync() {
            return base.Channel.GetAllAnswerAsync();
        }
        
        public bool IsCorrect(int id) {
            return base.Channel.IsCorrect(id);
        }
        
        public System.Threading.Tasks.Task<bool> IsCorrectAsync(int id) {
            return base.Channel.IsCorrectAsync(id);
        }
    }
}
