//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF.LoginReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF.LoginReference.Role roleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF.LoginReference.Role role {
            get {
                return this.roleField;
            }
            set {
                if ((object.ReferenceEquals(this.roleField, value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPF.LoginReference.Login loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quizIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPF.LoginReference.Login login {
            get {
                return this.loginField;
            }
            set {
                if ((object.ReferenceEquals(this.loginField, value) != true)) {
                    this.loginField = value;
                    this.RaisePropertyChanged("login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int point {
            get {
                return this.pointField;
            }
            set {
                if ((this.pointField.Equals(value) != true)) {
                    this.pointField = value;
                    this.RaisePropertyChanged("point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quizId {
            get {
                return this.quizIdField;
            }
            set {
                if ((this.quizIdField.Equals(value) != true)) {
                    this.quizIdField = value;
                    this.RaisePropertyChanged("quizId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginReference.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AddGuestAndLoginEncryptPw", ReplyAction="http://tempuri.org/ILoginService/AddGuestAndLoginEncryptPwResponse")]
        void AddGuestAndLoginEncryptPw(WPF.LoginReference.Login login, WPF.LoginReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/AddGuestAndLoginEncryptPw", ReplyAction="http://tempuri.org/ILoginService/AddGuestAndLoginEncryptPwResponse")]
        System.Threading.Tasks.Task AddGuestAndLoginEncryptPwAsync(WPF.LoginReference.Login login, WPF.LoginReference.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/EncryptAdminPassword", ReplyAction="http://tempuri.org/ILoginService/EncryptAdminPasswordResponse")]
        void EncryptAdminPassword(WPF.LoginReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/EncryptAdminPassword", ReplyAction="http://tempuri.org/ILoginService/EncryptAdminPasswordResponse")]
        System.Threading.Tasks.Task EncryptAdminPasswordAsync(WPF.LoginReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DecryptPassword", ReplyAction="http://tempuri.org/ILoginService/DecryptPasswordResponse")]
        WPF.LoginReference.Login DecryptPassword(WPF.LoginReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DecryptPassword", ReplyAction="http://tempuri.org/ILoginService/DecryptPasswordResponse")]
        System.Threading.Tasks.Task<WPF.LoginReference.Login> DecryptPasswordAsync(WPF.LoginReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DoesUserExist", ReplyAction="http://tempuri.org/ILoginService/DoesUserExistResponse")]
        bool DoesUserExist(WPF.LoginReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DoesUserExist", ReplyAction="http://tempuri.org/ILoginService/DoesUserExistResponse")]
        System.Threading.Tasks.Task<bool> DoesUserExistAsync(WPF.LoginReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetLogin", ReplyAction="http://tempuri.org/ILoginService/GetLoginResponse")]
        WPF.LoginReference.Login GetLogin(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetLogin", ReplyAction="http://tempuri.org/ILoginService/GetLoginResponse")]
        System.Threading.Tasks.Task<WPF.LoginReference.Login> GetLoginAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : WPF.LoginReference.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<WPF.LoginReference.ILoginService>, WPF.LoginReference.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddGuestAndLoginEncryptPw(WPF.LoginReference.Login login, WPF.LoginReference.User user) {
            base.Channel.AddGuestAndLoginEncryptPw(login, user);
        }
        
        public System.Threading.Tasks.Task AddGuestAndLoginEncryptPwAsync(WPF.LoginReference.Login login, WPF.LoginReference.User user) {
            return base.Channel.AddGuestAndLoginEncryptPwAsync(login, user);
        }
        
        public void EncryptAdminPassword(WPF.LoginReference.Login login) {
            base.Channel.EncryptAdminPassword(login);
        }
        
        public System.Threading.Tasks.Task EncryptAdminPasswordAsync(WPF.LoginReference.Login login) {
            return base.Channel.EncryptAdminPasswordAsync(login);
        }
        
        public WPF.LoginReference.Login DecryptPassword(WPF.LoginReference.Login login) {
            return base.Channel.DecryptPassword(login);
        }
        
        public System.Threading.Tasks.Task<WPF.LoginReference.Login> DecryptPasswordAsync(WPF.LoginReference.Login login) {
            return base.Channel.DecryptPasswordAsync(login);
        }
        
        public bool DoesUserExist(WPF.LoginReference.Login login) {
            return base.Channel.DoesUserExist(login);
        }
        
        public System.Threading.Tasks.Task<bool> DoesUserExistAsync(WPF.LoginReference.Login login) {
            return base.Channel.DoesUserExistAsync(login);
        }
        
        public WPF.LoginReference.Login GetLogin(string username) {
            return base.Channel.GetLogin(username);
        }
        
        public System.Threading.Tasks.Task<WPF.LoginReference.Login> GetLoginAsync(string username) {
            return base.Channel.GetLoginAsync(username);
        }
    }
}
